---
import { getCollection } from 'astro:content';
import SelectLanguage from '../_react/select-language/select-language.tsx';
import Icon from '../atoms/icon.astro';
import { MAIN_LOGO_TEXT } from '../../constants/global';

interface Props {
  language: string;
}

const { language } = Astro.props;
const headerCollection = await getCollection('header');
const headerByLanguage = headerCollection.find(
  (info) => info.id === language
)?.data;
---

<header class='header'>
  <a class='header__logo' href='#' rel='noreferrer noopener'>
    <Icon icon='main-icon' size='50px' />
    <label for='header__logo'>{MAIN_LOGO_TEXT}</label>
  </a>
  <div class='header__options'>
    <nav class='header__nav'>
      <ul class='header__list'>
        {
          headerByLanguage?.items.map((item) => (
            <li class='header__item'>
              <a class='header__link' href={item.url}>
                {item.text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <SelectLanguage language={language} client:load />
  </div>
</header>

<style>
  .header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 95%;
    margin: 0 auto;
    z-index: 1;
  }

  .header__logo {
    text-align: center;
    margin: 1rem 0;
    display: flex;
    align-items: center;
  }

  label {
    font: bold var(--text-xl) var(--font-cabin-base);
    padding-left: 1em;
    position: relative;
  }

  label::before {
    content: '';
    position: absolute;
    left: 0.5em;
    border-radius: 25px;
    border: 1.5px solid currentColor;
    height: 100%;
  }

  .header__title {
    font-size: 2rem;
  }

  .header__options {
    display: flex;
    align-items: center;
    gap: 7em;
    select {
      border: 1px solid var(--theme-main-color);
      padding: 0.5em 1em;
      border-radius: 15px;
    }
  }

  .header__list {
    display: flex;
    justify-content: center;
    gap: 5em;
  }

  .header__list:hover {
    transition: all 0.2s ease;
    .header__item {
      color: #a0a0a0;
    }
    .header__item:hover {
      color: #ffffff;
      box-shadow: 0 2px 0 0 currentcolor;
      transition: all 0.2s ease;
    }
  }

  .header__item {
    display: flex;
    align-items: center;
    padding: 0 5px;
    cursor: pointer;
    position: relative;
    transition: all 0.2s ease;
    font-family: var(--font-cabin-base);
    font-size: var(--text-md);
  }

  .header__item::after,
  .header__item::before {
    position: absolute;
    font-size: var(--text-xl);
    color: var(--theme-main-color);
    transition: all 0.2s ease;
  }

  .header__item::after {
    content: '>';
    opacity: 0;
    right: -8px;
  }

  .header__item::before {
    content: '<';
    opacity: 0;
    left: 5px;
  }

  .header__item:hover,
  .header__item--active {
    &::after,
    &::before {
      opacity: 1;
    }

    &::after {
      animation: rightToLeftArrow 0.3s ease-in;
    }

    &::before {
      animation: leftToRightArrow 0.3s ease-in;
    }
  }

  .header__link {
    padding: 10px 15px;
  }

  .header__link::after {
    content: '/';
    opacity: 0;
    position: absolute;
    right: 5px;
    transition: all 0.2s ease;
  }

  .header__item:hover > .header__link::after,
  .header__item--active > .header__link::after {
    opacity: 0;
    color: var(--theme-main-color);
    animation: diagonalTopToBottom 0.3s linear 0.35s forwards;
  }

  @keyframes leftToRightArrow {
    from {
      opacity: 0;
      left: -30px;
    }
    to {
      opacity: 1;
      left: 5px;
    }
  }

  @keyframes rightToLeftArrow {
    from {
      opacity: 0;
      right: -50px;
    }
    to {
      opacity: 1;
      right: -8px;
    }
  }

  @keyframes diagonalTopToBottom {
    from {
      opacity: 0;
      top: 0;
      right: -20px;
    }
    to {
      opacity: 1;
      top: 10px;
      right: 5px;
    }
  }
</style>
